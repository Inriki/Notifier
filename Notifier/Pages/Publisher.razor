@page "/publisher"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@implements IAsyncDisposable

<div class="form-group">
    <label>
        Message:
        <input @bind="messageInput" size="50" />
    </label>
</div>
<button @onclick="Send" disabled="@(!IsConnected)">Send</button>
<button @onclick="Info" disabled="@(!IsConnected)">Info</button>

<ul>
    <li># Clientes conectados: @readersCount </li>
</ul>
<hr>

@code {
    private HubConnection hubConnection;

    private string messageInput;
    private string readersCount;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/notifierhub"))
            .Build();
            
        hubConnection.On<Hubs.NotifierInfo>("ReceiveInfo", (info) =>
        {
            readersCount = info.ReadersCount.ToString();
            StateHasChanged();
        });     

        await hubConnection.StartAsync();        
    }

    async Task Send() =>
        await hubConnection.SendAsync("SendMessage", messageInput);

    async Task Info() =>
        await hubConnection.SendAsync("GetInfo");

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}